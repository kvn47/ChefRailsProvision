log_format main '$http_x_forwarded_for - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$host" "$http_user_agent"';

gzip_vary on;
gzip_proxied any;
gzip_types text/plain text/html application/xml text/css text/comma-separated-values text/javascript application/x-javascript application/atom+xml application/json;

# ban spam requests
server {
  listen 80;
  listen [::]:80;
  server_name <%= node['domain'] %>;
  location /youtube {
    access_log off;
    error_log off;
    return 444;
    deny all;
  }
  return 301 https://$server_name$request_uri;
}

server {
  listen 443 default_server ssl;
  server_name <%= node['domain'] %>;
  ssl on;
  ssl_certificate /etc/ssl/<%= node['domain'] %>.crt;
  ssl_certificate_key /etc/ssl/<%= node['domain'] %>.key;
  keepalive_timeout 5;
  access_log {{ app_path }}/log/nginx_access.log;
  error_log {{ app_path }}/log/nginx_error.log;
  root <%= node['app_path'] %>/public;
  location / {
    passenger_enabled on;
    passenger_ruby /usr/local/bin/ruby;
    passenger_app_root <%= node['app_path'] %>;
  }
}

upstream app_server {
  server unix:/tmp/<%= node['app'] %>.sock fail_timeout=0;
}

server {
  listen 28080 ssl;
  keepalive_timeout 5;
  root <%= node['app_path'] %>/public;
  ssl on;
  ssl_certificate /etc/ssl/<%= node['domain'] %>.crt;
  ssl_certificate_key /etc/ssl/<%= node['domain'] %>.key;

  location / {
    access_log off;
    proxy_pass http://app_server;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
  }
}
