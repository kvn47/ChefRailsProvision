server {
  listen 80;
  listen [::]:80;
  server_name <%= node.domain_name %>;
  # ban spam requests
  location /youtube {
    access_log off;
    error_log off;
    return 444;
    deny all;
  }
  <% if node.nginx_passenger.redirect_to_https %>
  return 301 https://$server_name$request_uri;
  <% end %>
}

server {
  <% if node.nginx_passenger.use_ssl %>
  listen 443 default_server ssl;
  ssl on;
  ssl_certificate /etc/ssl/<%= node.domain_name %>.crt;
  ssl_certificate_key /etc/ssl/<%= node.domain_name %>.key;
  <% else %>
  listen 80 defualt_server;
  <% end %>
  server_name <%= node.domain_name %>;
  keepalive_timeout 5;
  access_log /var/log/nginx/<%= node.app %>.access.log;
  error_log /var/log/nginx/<%= node.app %>.error.log;
  location / {
    root <%= node.app_path %>/public;
    passenger_enabled on;
    passenger_ruby /home/<%= node.user.name %>/.rbenv/shims/ruby;
    passenger_app_root <%= node.app_path %>;
    rails_env <%= node.rails_env %>;
    passenger_user <%= node.user.name %>;
    passenger_min_instances <%= node.nginx_passenger.site_min_instances %>;
    client_max_body_size <%= node.nginx_passenger.site_max_body_size %>;
  }
}

upstream app_server {
  server unix:/tmp/<%= node.app %>.sock fail_timeout=0;
}

server {
  <% if node.nginx_passenger.use_ssl %>
  listen 28080 ssl;
  ssl on;
  ssl_certificate /etc/ssl/<%= node.domain_name %>.crt;
  ssl_certificate_key /etc/ssl/<%= node.domain_name %>.key;
  <% else %>
  listen 28080;
  <% end %>
  keepalive_timeout 5;
  root <%= node.app_path %>/public;

  location / {
    access_log off;
    proxy_pass http://app_server;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
  }
}
